% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\docType{methods}
\name{VT.predict}
\alias{VT.predict}
\alias{VT.predict,RandomForest,data.frame,character-method}
\alias{VT.predict,RandomForest,missing,character-method}
\alias{VT.predict,randomForest,data.frame,character-method}
\alias{VT.predict,randomForest,missing,character-method}
\alias{VT.predict,train,ANY,character-method}
\alias{VT.predict,train,missing,character-method}
\title{VT.predict generic function}
\usage{
VT.predict(rfor, newdata, type)

\S4method{VT.predict}{RandomForest,missing,character}(rfor, type = "binary")

\S4method{VT.predict}{RandomForest,data.frame,character}(rfor, newdata,
  type = "binary")

\S4method{VT.predict}{randomForest,missing,character}(rfor, type = "binary")

\S4method{VT.predict}{randomForest,data.frame,character}(rfor, newdata,
  type = "binary")

\S4method{VT.predict}{train,ANY,character}(rfor, newdata, type = "binary")

\S4method{VT.predict}{train,missing,character}(rfor, type = "binary")
}
\arguments{
\item{rfor}{random forest model. Can be train, randomForest or RandomForest
class.}

\item{newdata}{Newdata to predict by the random forest model. If missing, OOB
predictions are returned.}

\item{type}{Must be binary or continous, depending on the outcome. Only
binary is really available.}
}
\value{
vector \eqn{E(Y=1)}
}
\description{
VT.predict generic function
}
\section{Methods (by class)}{
\itemize{
\item \code{rfor = RandomForest,newdata = missing,type = character}: rfor(RandomForest) newdata (missing) type (character)

\item \code{rfor = RandomForest,newdata = data.frame,type = character}: rfor(RandomForest) newdata (data.frame) type (character)

\item \code{rfor = randomForest,newdata = missing,type = character}: rfor(randomForest) newdata (missing) type (character)

\item \code{rfor = randomForest,newdata = data.frame,type = character}: rfor(randomForest) newdata (data.frame) type (character)

\item \code{rfor = train,newdata = ANY,type = character}: rfor(train) newdata (ANY) type (character)

\item \code{rfor = train,newdata = missing,type = character}: rfor(train) newdata (missing) type (character)
}}

